-- Windows Functions

-- Windows functions using Aggregate functions  
SELECT Marks,st_subject,
SUM(marks) OVER(ORDER BY marks ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "Total",
AVG(marks) OVER( ORDER BY marks ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) AS "AVG",
COUNT(marks) OVER( ORDER BY marks ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "COUNT",
MAX(marks) OVER( ORDER BY marks ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "MAXIMUM",
MIN(marks) OVER( ORDER BY marks ROWS BETWEEN UNBOUNDED PRECEDING  AND UNBOUNDED FOLLOWING) AS "MINIMUM"
FROM student;

 








 -- Windows Fuctions using Aggregate Functions
 SELECT Marks,st_subject,
 SUM(marks) OVER(PARTITION BY st_subject ORDER BY marks) AS "SUM",
 AVG(marks) OVER(PARTITION BY st_subject ORDER BY marks) AS "AVG",
 MAX(marks) OVER(PARTITION BY st_subject ORDER BY marks) AS "MAX",
 COUNT(marks) OVER(PARTITION BY st_subject ORDER BY marks) AS "COUNT",
 MIN(marks) OVER(PARTITION BY st_subject ORDER BY marks) AS "MIN"
 From student;



-- To get the overall data using aggregate Functions using windows functions
SELECT Marks,st_subject,
SUM(marks) OVER(ORDER BY Marks ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "SUM", 
AVG(marks) OVER(ORDER BY Marks ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "AVG", 
COUNT(marks) OVER(ORDER BY Marks ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "COUNT", 
MIN(marks) OVER(ORDER BY Marks ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "MIN", 
MAX(marks) OVER(ORDER BY Marks ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "MAX"
FROM student;

